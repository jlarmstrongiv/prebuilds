#!/usr/bin/env bash
set -euo pipefail

#########
# setup #
#########

os_script_path="$(dirname "$(realpath -s "$0")")/../"

# setup os
"$os_script_path/scripts/setup"

# install asdf
"$os_script_path/scripts/install_asdf"
# finish asdf installation
set +u
# shellcheck source=/dev/null
source ~/.bashrc
set -u

# install nodejs
"$os_script_path/scripts/install_node"

##########
# script #
##########

# install aws-lambda-ric dependencies
yum install -y g++ make cmake unzip tar gzip autoconf automake libtool

# install aws-lambda-ric
npm install --global aws-lambda-ric

# use tmp directory
tmp_dir="$(mktemp -d)"
cd "$tmp_dir" || exit 1

# move module to tmp dir
mv "$(npm root --global)/aws-lambda-ric" "$tmp_dir"

# create optimized and bundled version
npx --yes @vercel/ncc build "$tmp_dir/aws-lambda-ric/bin/index.js" -o "$tmp_dir/vercel-ncc-aws-lambda-ric"

# compress to .tar.gz
tar -czf "${RIC_FILENAME:-}" "./aws-lambda-ric"
tar -czf "${VERCEL_NCC_RIC_FILENAME:-}" "./vercel-ncc-aws-lambda-ric"

# move to output
mv "${RIC_FILENAME:-}" "${VERCEL_NCC_RIC_FILENAME:-}" "/var/task"

# cleanup
rm -rf "$tmp_dir"
